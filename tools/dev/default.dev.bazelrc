# Generated Bazel configuration for development.
# You can uncomment or change settings here as needed.
# Force regenerate: bazel run @tx-kit-ext//tools/dev:init -- -f
# Useful links:
# - https://bazel.build/reference/command-line-reference
# - https://bazel.build/reference/flag-cheatsheet

#### Quick setup
# build --enable_platform_specific_config
# build --config=local-tools
# build --config=debug
# build --config=wasm

#### Dependencies overrides
# common --override_module=tx-kit-ext=../tx-kit-ext
# common --override_module=tx-pkg-aux=../tx-pkg-aux
# common --override_module=tx-pkg-misc=../tx-pkg-misc

#### Progress and diagnostics
# build --announce_rc
# build --subcommands
# build --show_timestamps
# build --show_progress_rate_limit=1
# build --verbose_failures
# build --worker_verbose

#### Build differentials
# build --host_cpu=darwin_x86_64
# build --local_cpu_resources=16
# build --local_ram_resources=32768
# build --jobs=16

#### Build specifics
build:debug -c dbg
build:debug --spawn_strategy=local
build:debug --copt=-ffile-compilation-dir=.

build:release --compilation_mode=opt

#### Local development with preinstalled tools
build:local-tools --host_action_env=PATH
build:local-tools --action_env=PATH
build:local-tools --extra_toolchains=@rules_foreign_cc//toolchains:preinstalled_cmake_toolchain
build:local-tools --extra_toolchains=@rules_foreign_cc//toolchains:preinstalled_make_toolchain
build:local-tools --extra_toolchains=@rules_foreign_cc//toolchains:preinstalled_ninja_toolchain
build:local-tools --extra_toolchains=@rules_foreign_cc//toolchains:preinstalled_pkgconfig_toolchain

#### Build platform specifics: automatically detected with --enable_platform_specific_config
# https://bazel.build/run/bazelrc#enable_platform_specific_config
build:macos --action_env=DEVELOPER_DIR
build:macos --host_action_env=DEVELOPER_DIR

build:windows --enable_runfiles
build:windows --build_runfile_links

#### Target platform specifics 
build:wasm --platforms=@emsdk//:platform_wasm
# appends -wasm in output directories to not interfere w/ host builds
# (e.g. otherwise both builds go to {--symlink_prefix}bazel-out/darwin_arm64-dbg/)
build:wasm --platform_suffix=wasm
# --extra_toolchains allows to build @tx-kit-ext//tools/wasm:runner 
#   and reference it as task under --run_under (instead of executable)
build:wasm --extra_toolchains=@bazel_tools//tools/python:autodetecting_toolchain
test:wasm --run_under="@tx-kit-ext//tools/wasm:runner --"
run:wasm --run_under="@tx-kit-ext//tools/wasm:runner --"

#TODO: try them before setup
# build:android --android_crosstool_top=@androidndk//:default_crosstool
# build:android --cpu=arm64-v8a
# build:android --fat_apk_cpu=arm64-v8a,armeabi-v7a

# build:ios --xcode_version_config=@bazel_tools//tools/cpp:host_xcodes
# build:ios --apple_platform_type=ios
# build:ios --ios_minimum_os=12.0

#### Hermetic (reproducible) builds
build:hermetic --host_action_env=-PATH
build:hermetic --action_env=-PATH
build:hermetic --action_env=-MAKE
build:hermetic --action_env=-CMAKE
build:hermetic --action_env=-NINJA
build:hermetic --action_env=-PKG_CONFIG
build:hermetic --sandbox_default_allow_network=false

#### Build specifics for CI/CD environments
build:ci --noshow_progress
build:ci --curses=no
build:ci --color=no
build:ci --show_result=1
build:ci --verbose_failures

#### Bazel profiling
build:profile --profile=profile.json
build:profile --experimental_profile_include_target_label

build:profile-full --config=profile
build:profile-full --noslim_profile
build:profile-full --experimental_profile_include_primary_output
build:profile-full --record_full_profiler_data

build:profile-slim --config=profile
build:profile-slim --slim_profile

#### Testing configurations
test:unit --test_output=errors
test:unit --test_summary=short
test:unit --test_timeout=60

test:integration --test_output=all
test:integration --test_summary=detailed
test:integration --test_timeout=300

test:performance --test_output=all
test:performance --test_timeout=600
test:performance --test_env=PERFORMANCE_TEST=1
