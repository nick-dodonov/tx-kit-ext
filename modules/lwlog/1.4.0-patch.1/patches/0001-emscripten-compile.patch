From e637b6b583a053e20f226923e461a3612536cb41 Mon Sep 17 00:00:00 2001
From: Nick Dodonov <42121323+nick-dodonov@users.noreply.github.com>
Date: Sun, 21 Sep 2025 17:39:36 +0200
Subject: [PATCH] ** emscripten compile fix (to use in single-thread mode only)

---
 lwlog/include/details/os/os_impl.h        | 9 +++++++++
 lwlog/include/policy/concurrency_policy.h | 2 ++
 2 files changed, 11 insertions(+)

diff --git a/lwlog/include/details/os/os_impl.h b/lwlog/include/details/os/os_impl.h
index 6a911ad..e7d3c79 100644
--- a/lwlog/include/details/os/os_impl.h
+++ b/lwlog/include/details/os/os_impl.h
@@ -12,6 +12,9 @@ namespace lwlog::details::os
 				thread_id = static_cast<std::uint64_t>(::syscall(SYS_gettid));
 		#elif defined(__APPLE__)
 				::pthread_threadid_np(NULL, &thread_id);
+		#elif defined(__EMSCRIPTEN__)
+				// Emscripten single-threaded environment - return constant ID
+				thread_id = 1;
 		#else
 				thread_id = std::hash<std::thread::id>{}(std::this_thread::get_id());
 		#endif
@@ -23,6 +26,9 @@ namespace lwlog::details::os
 	{		
 		#if defined(_WIN32)
 				return static_cast<std::uint64_t>(::GetCurrentProcessId());
+		#elif defined(__EMSCRIPTEN__)
+				// Emscripten single-process environment - return constant ID
+				return 1;
 		#elif defined(__linux__) || defined(__APPLE__)
 				return static_cast<std::uint64_t>(::getpid());
 		#endif
@@ -33,6 +39,9 @@ namespace lwlog::details::os
 		#ifdef _WIN32
 			const ::DWORD_PTR mask = static_cast<::DWORD_PTR>(affinity_mask);
 			if (::SetThreadAffinityMask(::GetCurrentThread(), mask) == 0) return;
+		#elif defined(__EMSCRIPTEN__)
+			// Emscripten single-threaded environment - thread affinity not applicable
+			(void)affinity_mask; // Suppress unused parameter warning
 		#elif defined(__linux__)
 			::cpu_set_t cpuset;
 			CPU_ZERO(&cpuset);
diff --git a/lwlog/include/policy/concurrency_policy.h b/lwlog/include/policy/concurrency_policy.h
index 2b496cb..d154464 100644
--- a/lwlog/include/policy/concurrency_policy.h
+++ b/lwlog/include/policy/concurrency_policy.h
@@ -5,6 +5,8 @@
 #if defined(__x86_64__) || defined(_M_X64)
     #include <immintrin.h>
     #define LWLOG_CPU_PAUSE() _mm_pause()
+#elif defined(__EMSCRIPTEN__)
+    #define LWLOG_CPU_PAUSE() ((void)0)
 #elif defined(__aarch64__) || defined(_M_ARM64)
     #define LWLOG_CPU_PAUSE() __asm__ volatile("yield")
 #else
-- 
2.51.0

